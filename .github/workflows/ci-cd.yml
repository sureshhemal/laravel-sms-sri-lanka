name: CI/CD Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          # Laravel 10 - supports PHP 8.1+
          - php-version: '8.1'
            laravel-version: '10.*'
          - php-version: '8.2'
            laravel-version: '10.*'
          - php-version: '8.3'
            laravel-version: '10.*'
          - php-version: '8.4'
            laravel-version: '10.*'
          # Laravel 11 - requires PHP 8.2+
          - php-version: '8.2'
            laravel-version: '11.*'
          - php-version: '8.3'
            laravel-version: '11.*'
          - php-version: '8.4'
            laravel-version: '11.*'
          # Laravel 12 - requires PHP 8.2+
          - php-version: '8.2'
            laravel-version: '12.*'
          - php-version: '8.3'
            laravel-version: '12.*'
          - php-version: '8.4'
            laravel-version: '12.*'

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, dom, fileinfo, mysql

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ matrix.php-version }}-laravel-${{ matrix.laravel-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-version }}-laravel-${{ matrix.laravel-version }}-

      - name: Remove composer.lock
        run: rm -f composer.lock

      - name: Require correct Laravel version
        run: |
          composer require "laravel/framework:${{ matrix.laravel-version }}" "illuminate/support:${{ matrix.laravel-version }}" "illuminate/notifications:${{ matrix.laravel-version }}" --no-interaction --no-progress --with-all-dependencies
          if [[ "${{ matrix.laravel-version }}" == "10.*" ]]; then
            composer require "orchestra/testbench:^8.0" --no-interaction --no-progress --with-all-dependencies
          elif [[ "${{ matrix.laravel-version }}" == "11.*" ]]; then
            composer require "orchestra/testbench:^9.0" --no-interaction --no-progress --with-all-dependencies
          else
            composer require "orchestra/testbench:^10.0" --no-interaction --no-progress --with-all-dependencies
          fi

      - name: Run tests
        run: composer test

  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version from composer.json
        id: version
        run: |
          VERSION=$(php -r "echo json_decode(file_get_contents('composer.json'))->version;")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "v${{ steps.version.outputs.version }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create and push tag
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "v${{ steps.version.outputs.version }}" -m "Release version ${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        if: steps.check_tag.outputs.exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.version.outputs.version }}"
          release_name: "Release ${{ steps.version.outputs.version }}"
          draft: false
          prerelease: false
          body: |
            ## üöÄ What's New in v${{ steps.version.outputs.version }}

            ### ‚ú® Features & Improvements
            - **Laravel 12 Support**: Full compatibility with Laravel 12
            - **Enhanced CI/CD**: Improved testing matrix for all PHP/Laravel combinations
            - **Better Error Handling**: Improved SMS channel registration and HTTP client support
            - **Dependency Updates**: Added Guzzle HTTP client dependencies for better testing

            ### üîß Technical Improvements
            - **CI/CD Matrix**: Now tests PHP 8.1-8.4 with Laravel 10-12
            - **Test Coverage**: Fixed HTTP client tests with proper Laravel bootstrapping
            - **Dependency Management**: Proper testbench version selection for each Laravel version
            - **Release Automation**: Streamlined release process with automatic Packagist updates

            ### üêõ Bug Fixes
            - Fixed SMS notification channel registration
            - Resolved Guzzle HTTP client dependency issues
            - Fixed test compatibility across different Laravel versions
            - Improved error handling in notification system

            ### üìã Compatibility
            - **PHP**: 8.1, 8.2, 8.3, 8.4
            - **Laravel**: 10.x, 11.x, 12.x
            - **Testbench**: 8.x, 9.x, 10.x

            ### üì¶ Installation
            ```bash
            composer require sureshhemal/laravel-sms-sri-lanka
            ```

            **Full Changelog**: https://github.com/sureshhemal/laravel-sms-sri-lanka/commits/v${{ steps.version.outputs.version }}
